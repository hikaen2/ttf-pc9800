#!/usr/bin/env ruby
#
# bdfremap.rb
#
# Copyright (c) 2013 Suzuki Taro
# MIT License
#

if ARGV.length != 2
  puts 'Usage: bdfremap.rb bdffile mapfile'
  exit
end

def parse_map(map)
  map.scan(/0x([0-9A-Fa-f]+)[ \t]+0x([0-9A-Fa-f]+)/).map {|jis, unicode| [jis.hex, unicode.hex] }.group_by {|jis, unicode| unicode }.values.map {|arrays| arrays.min }
end

bdf = IO.read(ARGV[0])
print bdf.match(/^.*ENDPROPERTIES\s*\n/m)
chars = bdf.scan(/STARTCHAR.+?ENDCHAR\s*\n/m).inject({}) { |sum,s| sum[s.match(/ENCODING\s+(\d+)/)[1].to_i] = s; sum }

out = []
parse_map(IO.read(ARGV[1])).each do |jis, unicode|
  out << chars[jis].gsub(/ENCODING\s+(\d+)/) { |m| sprintf('ENCODING %d', unicode) } if chars[jis]
end

puts 'CHARS ' + out.length.to_s
print out.join
puts 'ENDFONT'
