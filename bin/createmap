#!/usr/bin/env ruby
#
# createmap.rb
#
# gem install sqlite3 unicode-name
#
# Copyright (c) 2013 Suzuki Taro
# MIT License
#

require 'sqlite3'
require 'unicode/name'

if ARGV.length != 2
  puts 'Usaga: createmap.rb JIS2Uni CP932.JIS.TXT > EXT.TXT'
  exit 1
end

db = SQLite3::Database.new(':memory:')
db.execute('CREATE TABLE jis78_to_unicode  (jis78  INTEGER PRIMARY KEY, unicode INTEGER, source TEXT)')
db.execute('CREATE TABLE jis932_to_unicode (jis932 INTEGER PRIMARY KEY, unicode INTEGER, source TEXT)')
db.execute('CREATE TABLE jisext_to_unicode (jisext INTEGER PRIMARY KEY, unicode INTEGER, source TEXT)')

db.transaction do
  IO.read(ARGV[0]).scan(/0x([0-9A-Fa-f]+)[ \t]+0x([0-9A-Fa-f]+)/).map {|jis, unicode| [jis.hex, unicode.hex] }.each do |jis, unicode|
    db.execute('INSERT INTO jis78_to_unicode VALUES (?, ?, ?)',  jis, unicode, ARGV[0])
  end
  IO.read(ARGV[1]).scan(/0x([0-9A-Fa-f]+)[ \t]+0x([0-9A-Fa-f]+)/).map {|jis, unicode| [jis.hex, unicode.hex] }.each do |jis, unicode|
    db.execute('INSERT INTO jis932_to_unicode VALUES (?, ?, ?)', jis, unicode, ARGV[1])
  end

  db.execute("INSERT INTO jisext_to_unicode SELECT * FROM jis932_to_unicode WHERE jis932 BETWEEN #{0x0000} AND #{0x222E}") # ..2ku
  db.execute("INSERT INTO jisext_to_unicode SELECT * FROM jis932_to_unicode WHERE jis932 BETWEEN #{0x2321} AND #{0x277E}") # 3ku..7ku
  db.execute("INSERT INTO jisext_to_unicode SELECT * FROM jis932_to_unicode WHERE jis932 BETWEEN #{0x2D21} AND #{0x2D7E}") # 13ku
  db.execute("INSERT INTO jisext_to_unicode SELECT * FROM jis78_to_unicode  WHERE jis78  BETWEEN #{0x3021} AND #{0x747E}") # 16ku..84ku
  db.execute("INSERT INTO jisext_to_unicode SELECT * FROM jis932_to_unicode WHERE jis932 BETWEEN #{0x7921} AND #{0x7C7E}") # 89ku..92ku

  # patches
  db.execute("UPDATE jisext_to_unicode SET unicode = #{0xA5}  , source='patched from U+005C' WHERE jisext = #{0x5C}   AND unicode = #{0x5C}")   # 0x5C is YEN SIGN(U+00A5), not REVERSE SOLIDUS(U+005C).
#  db.execute("UPDATE jisext_to_unicode SET unicode = #{0xA6}  , source='patched from U+007C' WHERE jisext = #{0x7C}   AND unicode = #{0x7C}")   # 0x7C is BROKEN BAR(U+00A6), not VERTICAL LINE(U+007C).
  db.execute("UPDATE jisext_to_unicode SET unicode = #{0x6602}, source='patched from U+663B' WHERE jisext = #{0x7A36} AND unicode = #{0x663B}") # JIS78(0x7A36) is U+6602, not U+663B.

  # manually assign
  db.execute("INSERT INTO jisext_to_unicode VALUES(#{0xFC}, #{0x5C}  , 'manual')") # REVERSE SOLIDUS
  db.execute("INSERT INTO jisext_to_unicode VALUES(#{0x80}, #{0x2581}, 'manual')") # LOWER ONE EIGHTH BLOCK
  db.execute("INSERT INTO jisext_to_unicode VALUES(#{0x81}, #{0x2582}, 'manual')") # LOWER ONE QUARTER BLOCK
  db.execute("INSERT INTO jisext_to_unicode VALUES(#{0x82}, #{0x2583}, 'manual')") # LOWER THREE EIGHTHS BLOCK
  db.execute("INSERT INTO jisext_to_unicode VALUES(#{0x83}, #{0x2584}, 'manual')") # LOWER HALF BLOCK
  db.execute("INSERT INTO jisext_to_unicode VALUES(#{0x84}, #{0x2585}, 'manual')") # LOWER FIVE EIGHTHS BLOCK
  db.execute("INSERT INTO jisext_to_unicode VALUES(#{0x85}, #{0x2586}, 'manual')") # LOWER THREE QUARTERS BLOCK
  db.execute("INSERT INTO jisext_to_unicode VALUES(#{0x86}, #{0x2587}, 'manual')") # LOWER SEVEN EIGHTHS BLOCK
  db.execute("INSERT INTO jisext_to_unicode VALUES(#{0x87}, #{0x2588}, 'manual')") # FULL BLOCK
  db.execute("INSERT INTO jisext_to_unicode VALUES(#{0x88}, #{0x258F}, 'manual')") # LEFT ONE EIGHTH BLOCK
  db.execute("INSERT INTO jisext_to_unicode VALUES(#{0x89}, #{0x258E}, 'manual')") # LEFT ONE QUARTER BLOCK
  db.execute("INSERT INTO jisext_to_unicode VALUES(#{0x8A}, #{0x258D}, 'manual')") # LEFT THREE EIGHTHS BLOCK
  db.execute("INSERT INTO jisext_to_unicode VALUES(#{0x8B}, #{0x258C}, 'manual')") # LEFT HALF BLOCK
  db.execute("INSERT INTO jisext_to_unicode VALUES(#{0x8C}, #{0x258B}, 'manual')") # LEFT FIVE EIGHTHS BLOCK
  db.execute("INSERT INTO jisext_to_unicode VALUES(#{0x8D}, #{0x258A}, 'manual')") # LEFT THREE QUARTERS BLOCK
  db.execute("INSERT INTO jisext_to_unicode VALUES(#{0x8E}, #{0x2589}, 'manual')") # LEFT SEVEN EIGHTHS BLOCK
  db.execute("INSERT INTO jisext_to_unicode VALUES(#{0x9C}, #{0x256D}, 'manual')") # BOX DRAWINGS LIGHT ARC DOWN AND RIGHT
  db.execute("INSERT INTO jisext_to_unicode VALUES(#{0x9D}, #{0x256E}, 'manual')") # BOX DRAWINGS LIGHT ARC DOWN AND LEFT
  db.execute("INSERT INTO jisext_to_unicode VALUES(#{0x9E}, #{0x2570}, 'manual')") # BOX DRAWINGS LIGHT ARC UP AND RIGHT
  db.execute("INSERT INTO jisext_to_unicode VALUES(#{0x9F}, #{0x256F}, 'manual')") # BOX DRAWINGS LIGHT ARC UP AND LEFT
  db.execute("INSERT INTO jisext_to_unicode VALUES(#{0xE8}, #{0x2660}, 'manual')") # BLACK SPADE SUIT
  db.execute("INSERT INTO jisext_to_unicode VALUES(#{0xE9}, #{0x2665}, 'manual')") # BLACK HEART SUIT
  db.execute("INSERT INTO jisext_to_unicode VALUES(#{0xEA}, #{0x2666}, 'manual')") # BLACK DIAMOND SUIT
  db.execute("INSERT INTO jisext_to_unicode VALUES(#{0xEB}, #{0x2663}, 'manual')") # BLACK CLUB SUIT
  db.execute("INSERT INTO jisext_to_unicode VALUES(#{0xE4}, #{0x25E2}, 'manual')") # BLACK LOWER RIGHT TRIANGLE
  db.execute("INSERT INTO jisext_to_unicode VALUES(#{0xE5}, #{0x25E3}, 'manual')") # BLACK LOWER LEFT TRIANGLE
  db.execute("INSERT INTO jisext_to_unicode VALUES(#{0xE6}, #{0x25E5}, 'manual')") # BLACK UPPER RIGHT TRIANGLE
  db.execute("INSERT INTO jisext_to_unicode VALUES(#{0xE7}, #{0x25E4}, 'manual')") # BLACK UPPER LEFT TRIANGLE
#  db.execute("INSERT INTO jisext_to_unicode VALUES(#{0xEC}, #{0xFFED}, 'manual')") # HALFWIDTH BLACK SQUARE
  db.execute("INSERT INTO jisext_to_unicode VALUES(#{0xED}, #{0xFFEE}, 'manual')") # HALFWIDTH WHITE CIRCLE
  db.execute("INSERT INTO jisext_to_unicode VALUES(#{0xEE}, #{0x2571}, 'manual')") # BOX DRAWINGS LIGHT DIAGONAL UPPER RIGHT TO LOWER LEFT
  db.execute("INSERT INTO jisext_to_unicode VALUES(#{0xEF}, #{0x2572}, 'manual')") # BOX DRAWINGS LIGHT DIAGONAL UPPER LEFT TO LOWER RIGHT
  db.execute("INSERT INTO jisext_to_unicode VALUES(#{0xF0}, #{0x2573}, 'manual')") # BOX DRAWINGS LIGHT DIAGONAL CROSS

#  halfwidth = true
#  76.times do |i|
#    db.execute("INSERT INTO jisext_to_unicode VALUES(#{0x2C24 - (halfwidth ? 0x100 : 0) + i}, #{0x2500 + i}, 'manual')") # BOX DRAWINGS
#  end

  db.execute("INSERT INTO jisext_to_unicode VALUES(#{0x8F}, #{0x253c}  , 'manual')") # BOX DRAWINGS
  db.execute("INSERT INTO jisext_to_unicode VALUES(#{0x90}, #{0x2534}  , 'manual')") # BOX DRAWINGS
  db.execute("INSERT INTO jisext_to_unicode VALUES(#{0x91}, #{0x252c}  , 'manual')") # BOX DRAWINGS
  db.execute("INSERT INTO jisext_to_unicode VALUES(#{0x92}, #{0x2524}  , 'manual')") # BOX DRAWINGS
  db.execute("INSERT INTO jisext_to_unicode VALUES(#{0x93}, #{0x251c}  , 'manual')") # BOX DRAWINGS
#  db.execute("INSERT INTO jisext_to_unicode VALUES(#{0x94}, #{0x    }  , 'manual')") # BOX DRAWINGS
  db.execute("INSERT INTO jisext_to_unicode VALUES(#{0x95}, #{0x2500}  , 'manual')") # BOX DRAWINGS
  db.execute("INSERT INTO jisext_to_unicode VALUES(#{0x96}, #{0x2502}  , 'manual')") # BOX DRAWINGS
#  db.execute("INSERT INTO jisext_to_unicode VALUES(#{0x97}, #{0x    }  , 'manual')") # BOX DRAWINGS
  db.execute("INSERT INTO jisext_to_unicode VALUES(#{0x98}, #{0x250c}  , 'manual')") # BOX DRAWINGS
  db.execute("INSERT INTO jisext_to_unicode VALUES(#{0x99}, #{0x2510}  , 'manual')") # BOX DRAWINGS
  db.execute("INSERT INTO jisext_to_unicode VALUES(#{0x9A}, #{0x2514}  , 'manual')") # BOX DRAWINGS
  db.execute("INSERT INTO jisext_to_unicode VALUES(#{0x9B}, #{0x2518}  , 'manual')") # BOX DRAWINGS
end

# db.execute('SELECT unicode, GROUP_CONCAT(jisext) FROM jisext_to_unicode GROUP BY unicode HAVING count(jisext) >= 2').each do |unicode, jiss|
#   printf("U+%04X\t%s\n", unicode, jiss.split(',').map{|i| '%04X' % i}.join(' '))
# end
# exit

table = db.execute('SELECT * FROM jisext_to_unicode ORDER BY jisext')
raise if table.size != table.uniq{|e| e[0]}.size # assertion
raise if table.size != table.uniq{|e| e[1]}.size # assertion

puts "# generated by createmap"
puts "# JIS\tUnicode\t# source\t# Unicode name"
puts table.map {|sjisext, unicode, source| sprintf("0x%04X\t0x%04X\t# %s\t# %s", sjisext, unicode, source, Unicode::Name.of(unicode.chr('UTF-8'))) }.join("\n")
